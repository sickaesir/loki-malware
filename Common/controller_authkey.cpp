#include "controller_authkey.h"
#include "common.h"
#include <random>

bool is_valid_controller_authkey(char* auth_key)
{
	auto xor = controller_authkey_xor_start;
	auto sum = controller_authkey_sum_start;
	for (int i = 0; i < 32; i++)
	{
		xor = (xor ^ auth_key[i]) & 0xFF;
		sum = (sum + auth_key[i]) & 0xFF;
	}

	return xor == controller_authkey_xor_checksum && sum == controller_authkey_sum_checksum;
}

int generate_controller_authkey(char* out_buffer)
{
	int generated_keys = 0;
	while (true)
	{
		generated_keys++;
		char generated_key[32];
		for (int i = 0; i < 32; i++)
			generated_key[i] = std::uniform_int_distribution<int>(-125, 125)(std::mt19937_64(std::random_device()()));

		if (is_valid_controller_authkey(generated_key))
		{
			memcpy(out_buffer, generated_key, 32);
			break;
		}
		
	}

	return generated_keys;

}